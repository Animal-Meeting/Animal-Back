plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'checkstyle'
}

group = 'animal'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'
tasks.withType(Checkstyle) {
	reports {
		xml.required = true
		html.required = true
	}
}
checkstyle {
	configFile = file("config/checkstyle/naver-checkstyle-rules.xml")
	configProperties = ["suppressionFile": "config/checkstyle/naver-checkstyle-suppression.xml"]
}

// profile 옵션을 줬으면 그 옵션, 없으면 "prod"
def profile = project.hasProperty("profile") ? project.property("profile").toString() : "prod"

sourceSets {
	main {
		resources {
			// 맨 마지막 "src/main/resources/resources-${profile}" 추가 ⭐️
			srcDirs = ["$frontDir/build", "$projectDir/src/main/resources", "src/main/resources/application-${profile}"]
		}
	}
}