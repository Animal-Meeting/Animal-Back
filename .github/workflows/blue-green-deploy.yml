# Workflow의 이름을 지정합니다.
name: Blue Green 배포 using github actions

on:
  push:
    # main branch에 push(merge)될 경우 실행됩니다.
    branches: [ "infra#39" ]

permissions:
  contents: read

jobs:
  build:
    environment: DEV
    # build를 진행할 운영체제를 선택합니다.
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Make application-prod.yml
        run: |
          cd ./src/main/resources
          touch ./application-prod.yml
          echo "$APPLICATION_PROD" > ./application-prod.yml
        env:
          APPLICATION_PROD: ${{ secrets.APPLICATION_PROD }}
        shell: bash

      - name: Gradle 권한 부여
        run: chmod +x gradlew

      - name: Gradle로 빌드 실행
        run: ./gradlew bootjar

      - name: zip file 생성
        run: |
          mkdir deploy
          cp ./docker/docker-compose.blue.yml ./deploy/
          cp ./docker/docker-compose.green.yml ./deploy/
          cp ./docker/Dockerfile ./deploy/
          cp ./scripts/*.sh ./deploy/
          cp ./appspec-blue-green.yml ./deploy/appspec.yml
          cp ./build/libs/animal-meeting-blue-green-app.jar ./deploy/
          chmod +x ./deploy/deploy-blue-green.sh
          zip -r -qq -j ./animal-meeting-blue-green-app.zip ./deploy
          

      # AWS에 연결해줍니다.
      - name: AWS 연결
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      # S3에 프로젝트를 업로드 합니다.
      - name: S3에 프로젝트 업로드
        run: |
          aws s3 cp \
          --region ap-northeast-2 \
          ./animal-meeting-blue-green-app.zip s3://animal-meeting-bucket

      # CodeDelploy에 배포를 요청합니다.
      - name: Code Deploy 배포 요청
        run: |
          aws deploy create-deployment --application-name animal-meeting-codedeploy \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name animal-meeting-codedeploy-group \
          --s3-location bucket=animal-meeting-bucket,bundleType=zip,key=animal-meeting-blue-green-app.zip
